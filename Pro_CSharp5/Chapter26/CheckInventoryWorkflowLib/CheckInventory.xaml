<Activity mc:Ignorable="sap sap2010 sads" x:Class="CheckInventoryWorkflowLib.CheckInventory"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:a="clr-namespace:AutoLotDisconnectedLayer;assembly=AutoLotDAL"
 xmlns:local="clr-namespace:CheckInventoryWorkflowLib"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="RequestedMake" Type="InArgument(x:String)" />
    <x:Property Name="RequestedColor" Type="InArgument(x:String)" />
    <x:Property Name="FormattedResponse" Type="OutArgument(x:String)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap2010:WorkflowViewState.IdRef>CheckInventoryWorkflowLib.Activity1_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>AutoLotDisconnectedLayer</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>AutoLotDAL</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>CheckInventoryWorkflowLib</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Look Up Product" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="a:InventoryDALDisLayer" Name="AutoLotInventory">
        <Variable.Default>
          <mca:CSharpValue x:TypeArguments="a:InventoryDALDisLayer">new InventoryDALDisLayer(@"Data Source=(local)\SQLEXPRESS;Initial Catalog=AutoLot;Integrated Security=True")</mca:CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="sd:DataTable" Name="Inventory">
        <Variable.Default>
          <mca:CSharpValue x:TypeArguments="sd:DataTable">null</mca:CSharpValue>
        </Variable.Default>
      </Variable>
    </Sequence.Variables>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="sd:DataTable">
          <mca:CSharpReference x:TypeArguments="sd:DataTable">Inventory</mca:CSharpReference>
        </OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="sd:DataTable">
          <mca:CSharpValue x:TypeArguments="sd:DataTable">AutoLotInventory.GetAllInventory()</mca:CSharpValue>
        </InArgument>
      </Assign.Value>
    </Assign>
    <If sap2010:WorkflowViewState.IdRef="If_1">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <mca:CSharpValue x:TypeArguments="x:Boolean" xml:space="preserve">(from car in Inventory.AsEnumerable()
where (string)car["Color"] == RequestedColor
&amp;&amp; (string)car["Make"] == RequestedMake
select car).Any()</mca:CSharpValue>
        </InArgument>
      </If.Condition>
      <If.Then>
        <Switch x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="Switch`1_1">
          <Switch.Default>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">
                  <mca:CSharpReference x:TypeArguments="x:String">FormattedResponse</mca:CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String">String.Format("Yes, we have {0} {1} now ({2})", RequestedColor, RequestedMake, DateTime.Now)</mca:CSharpValue>
                </InArgument>
              </Assign.Value>
            </Assign>
          </Switch.Default>
          <Switch.Expression>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">RequestedMake</mca:CSharpValue>
            </InArgument>
          </Switch.Expression>
          <Assign x:Key="BMW" sap2010:WorkflowViewState.IdRef="Assign_3">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">
                <mca:CSharpReference x:TypeArguments="x:String">FormattedResponse</mca:CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">String.Format("Yes, please take your {0}", RequestedMake)</mca:CSharpValue>
              </InArgument>
            </Assign.Value>
          </Assign>
        </Switch>
      </If.Then>
      <If.Else>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_2">
          <local:CreateSalesMemoActivity sap2010:WorkflowViewState.IdRef="CreateSalesMemoActivity_1">
            <local:CreateSalesMemoActivity.Color>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">RequestedColor</mca:CSharpValue>
              </InArgument>
            </local:CreateSalesMemoActivity.Color>
            <local:CreateSalesMemoActivity.Make>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">RequestedMake</mca:CSharpValue>
              </InArgument>
            </local:CreateSalesMemoActivity.Make>
          </local:CreateSalesMemoActivity>
          <Assign>
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">
                <mca:CSharpReference x:TypeArguments="x:String">FormattedResponse</mca:CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">Sorry, out of stock</InArgument>
            </Assign.Value>
            <sap2010:WorkflowViewState.IdRef>Assign_4</sap2010:WorkflowViewState.IdRef>
          </Assign>
        </Sequence>
      </If.Else>
    </If>
    <sads:DebugSymbol.Symbol>d3JDOlxVc2Vyc1xhZGFtLmxlc2lha1xEb2N1bWVudHNcVmlzdWFsIFN0dWRpbyAyMDEzXFByb2plY3RzXENoYXB0ZXIyNlxDaGVja0ludmVudG9yeVdvcmtmbG93TGliXENoZWNrSW52ZW50b3J5LnhhbWwXMgOUAQ4CAQE2CzbDAQIBCDsLO1ECAQI/BUoOAgFMSwWSAQoCAQ5HC0dvAgFTQgtCXgIBTU4LUSQCAQ9VCXUSAgEreAmQARQCARVmD2ZaAgEsaQt0FAIBP1cNYhYCATJ5C4QBKwIBHoUBC48BFAIBFnERcYgBAgFGbBFsaAIBQF8TX60BAgE5WhNaagIBM3wRfF0CASWBARGBAVwCAR+MATaMAUkCAR2IARGIAWgCARc=</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="766.4,62.4" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="243.2,62.4" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="243.2,62.4" />
      <sap2010:ViewStateData Id="Switch`1_1" sap:VirtualizedContainerService.HintSize="476.8,144" />
      <sap2010:ViewStateData Id="CreateSalesMemoActivity_1" sap:VirtualizedContainerService.HintSize="243.2,22.4" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="243.2,62.4" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="265.6,249.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="766.4,401.6" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="788.8,628.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CheckInventoryWorkflowLib.Activity1_1" sap:VirtualizedContainerService.HintSize="828.8,708.8" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>